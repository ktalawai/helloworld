name: Maven Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_NAME: kinitap/demo-hello-world
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 20.0
        uses: actions/setup-java@v2
        with:
          java-version: 20.0
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker Image
        run: |
            # Build the Docker image inside a container
            docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Set Docker tag as environment variable
        run: echo "DOCKER_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Use envsubst to replace Docker tag in deployment YAML
        run: |
          cat demo-deployment.yml | envsubst > demo-deployment.yml

      - name: Debug demo-deployment.yml
        run: |
          cat demo-deployment.yml

      - name: Show Docker Images
        run: docker images

      - name: Run Docker Container
        run: docker run -d --name demo-hello-world-v2 -p 8081:8081 kinitap/demo-hello-world:${{ github.sha }}

      - name: Show Docker Containers
        run: docker ps

      - name: Stop Docker Container
        run: docker stop demo-hello-world-v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: docker push kinitap/demo-hello-world:${{ github.sha }}

      - name: Install AWS CLI and kubectl
        run: |
          # Install AWS CLI
          sudo apt-get update -q
          sudo apt-get install -y -q unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          
          # Install kubectl
          sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-south-1  # Replace with your AWS region

      - name: Configure kubectl for EKS
        run: |
          aws eks --region ap-south-1 update-kubeconfig --name demo-eks-cluster

      - name: List files in the current directory
        run: ls -ltr

      - name: Deploy to EKS cluster
        run: |
            pwd
            kubectl apply -f ./demo-deployment.yml